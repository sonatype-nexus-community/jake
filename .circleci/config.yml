# Copyright 2019-present Sonatype Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

jobs:
  publish:
    docker: # run the steps with Docker
      - image: circleci/python:3.7
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true 
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4f:7d:6b:26:dc:44:de:b0:4d:f1:96:50:2a:b5:bd:b3"
      - checkout
      - run:
          command: |
            .circleci/ci-publish.sh

  build:
    docker: # run the steps with Docker
      - image: circleci/python:3.7
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run:
          name: Setup Python environment
          command: |
            sudo .circleci/ci-setup.sh
      - run:
          name: Run tests and self scan
          command: |
            .circleci/ci-run.sh
            # audit jake with jake
            pip3 install -e .
            # hot mess to uninstall dev requirements before we self scan. probably should move to pipenv
            pip3 uninstall -r requirements-dev.txt -y
            jake ddt -q
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1

workflows:
  version: 2
  build_and_test_and_publish:
    jobs:
      - build
      - publish:
          filters:
            branches:
              only: main
          context: pypi
          requires:
            - build

  build_nightly:
    triggers:
      - schedule:
          cron: "20 20 * * *"
          filters:
            branches:
              only: main
    jobs:
      - build

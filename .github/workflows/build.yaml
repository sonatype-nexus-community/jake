# Copyright 2019-Present Sonatype Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Python CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:
  schedule:
    # schedule weekly tests, since dependencies are not intended to be pinned
    # this means: at 23:42 on Fridays
    - cron: '42 23 * * 5'

env:
  REPORTS_DIR: CI_reports

jobs:
  coding-standards:
    name: Linting & Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Setup Python Environment
        # see https://github.com/actions/setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: 'x64'
      - name: Install poetry
        # see https://github.com/marketplace/actions/setup-poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Run tox
        run: poetry run tox -e flake8

  build-and-test:
    name: Build & Test (Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    env:
      REPORTS_ARTIFACT: tests-reports
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9" # highest supported
          - "3.8"
          - "3.7"
          - "3.6" # lowest supported
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2
      - name: Create reports directory
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Setup Python Environment
        # see https://github.com/actions/setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install poetry
        # see https://github.com/marketplace/actions/setup-poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Ensure build successful
        run: poetry build
      - name: Run tox
        run: poetry run tox -e py${{ matrix.python-version }}
      - name: Generate coverage reports
        run: >
          poetry run coverage report &&
          poetry run coverage xml -o ${{ env.REPORTS_DIR }}/coverage.xml &&
          poetry run coverage html -d ${{ env.REPORTS_DIR }}
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
      - name: Run Jake on Jake
        run: >
          poetry install --no-dev &&
          poetry run jake ddt
